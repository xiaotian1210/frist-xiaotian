/*
 * Copyright DMS Jiazht. All rights reserved.
 * 
 * The code was generated by tools.
 * if you want to modify it, regenerate is Deprecated.
 * if you want to regenerate the code strongly, please backup the code first.
 */
package com.shareworx.ezfm.device.fmdata.model;

import com.shareworx.platform.persist.DomainModel;

/**
 * 设备分类信息实体类
 * 
 * @author jin.li
 * @version since Shareworx platform 2.0
 */
@SuppressWarnings("serial")
public class YJWYCsiModel extends DomainModel {
	
	/**
	 * 元数据名称
	 */
	public final static String META_ID = "yjwy_fmdata_csi";
	
	/** 分类编码 */
	public final static String CSI_ID = "csi_id";	
	/** 分类描述 */
	public final static String DESCRIPTION = "description";	
	/** 主要参数1 */
	public final static String PARAM1 = "param1";	
	/** 主要参数2 */
	public final static String PARAM2 = "param2";	
	/** 主要参数3 */
	public final static String PARAM3 = "param3";	
	/** 类型 */
	public final static String TYPE = "type";	
	/** 最后更新时间 */
	public final static String DMS_UPDATE_TIME = "dms_update_time";	
	/** 所属公司 */
	public final static String PK_CROP = "pk_crop";	
	/** 是否有效 */
	public final static String FLAG = "flag";	
	/** 下拉框选中标识 */
	public final static String SELECTED = "selected";	

	public YJWYCsiModel() {
		super(META_ID);
	}
	
	/**
	 * 获取元数据名称
	 */
	@Override
	public String getMetaName() {
		return META_ID;
	}
	
	/**
	 * 获取实体主键
	 */
	public String getPrimaryKey() {
		return CSI_ID;
	}
	
	/**
	 * 获取映射表字段
	 * @param key
	 * @return
	 */
	public String getColumn(String key) {
		switch (key) {
		case CSI_ID:
			return "csi_id";
		case DESCRIPTION:
			return "description";
		case PARAM1:
			return "param1";
		case PARAM2:
			return "param2";
		case PARAM3:
			return "param3";
		case TYPE:
			return "type";
		case DMS_UPDATE_TIME:
			return "dms_update_time";
		case PK_CROP:
			return "pk_crop";
		case FLAG:
			return "flag";
		}
		return null;
	}

	/**
	 * 获取分类编码
	 * @return
	 */
	public String getCsi_id() {
		return getAttribute(CSI_ID);
	}

	/**
	 * 设置分类编码
	 * @param csi_id
	 */
	public void setCsi_id(String csi_id) {
		setAttribute(CSI_ID, csi_id);
	}

	/**
	 * 获取分类描述
	 * @return
	 */
	public String getDescription() {
		return getAttribute(DESCRIPTION);
	}

	/**
	 * 设置分类描述
	 * @param description
	 */
	public void setDescription(String description) {
		setAttribute(DESCRIPTION, description);
	}

	/**
	 * 获取主要参数1
	 * @return
	 */
	public String getParam1() {
		return getAttribute(PARAM1);
	}

	/**
	 * 设置主要参数1
	 * @param param1
	 */
	public void setParam1(String param1) {
		setAttribute(PARAM1, param1);
	}

	/**
	 * 获取主要参数2
	 * @return
	 */
	public String getParam2() {
		return getAttribute(PARAM2);
	}

	/**
	 * 设置主要参数2
	 * @param param2
	 */
	public void setParam2(String param2) {
		setAttribute(PARAM2, param2);
	}

	/**
	 * 获取主要参数3
	 * @return
	 */
	public String getParam3() {
		return getAttribute(PARAM3);
	}

	/**
	 * 设置主要参数3
	 * @param param3
	 */
	public void setParam3(String param3) {
		setAttribute(PARAM3, param3);
	}

	/**
	 * 获取类型
	 * @return
	 */
	public Integer getType() {
		return getAttribute(TYPE);
	}

	/**
	 * 设置类型
	 * @param type
	 */
	public void setType(Integer type) {
		setAttribute(TYPE, type);
	}

	/**
	 * 获取最后更新时间
	 * @return
	 */
	public String getDms_update_time() {
		return getAttribute(DMS_UPDATE_TIME);
	}

	/**
	 * 设置最后更新时间
	 * @param dms_update_time
	 */
	public void setDms_update_time(String dms_update_time) {
		setAttribute(DMS_UPDATE_TIME, dms_update_time);
	}

	/**
	 * 获取所属公司
	 * @return
	 */
	public String getPk_crop() {
		return getAttribute(PK_CROP);
	}

	/**
	 * 设置所属公司
	 * @param pk_crop
	 */
	public void setPk_crop(String pk_crop) {
		setAttribute(PK_CROP, pk_crop);
	}

	/**
	 * 获取是否有效
	 * @return
	 */
	public Integer getFlag() {
		return getAttribute(FLAG);
	}

	/**
	 * 设置是否有效
	 * @param flag
	 */
	public void setFlag(Integer flag) {
		setAttribute(FLAG, flag);
	}
	/**
	 * 获取下拉框选中标识
	 * @return
	 */
	public Boolean getSelected() {
		return getAttribute(SELECTED);
	}

	/**
	 * 设置下拉框选中标识
	 * @param selected
	 */
	public void setSelected(Boolean selected) {
		setAttribute(SELECTED, selected);
	}
}
