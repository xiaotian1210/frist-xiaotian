/*
 * Copyright DMS Jiazht. All rights reserved.
 * 
 * The code was generated by tools.
 * if you want to modify it, regenerate is Deprecated.
 * if you want to regenerate the code strongly, please backup the code first.
 */
package com.shareworx.ezfm.quality.proinspect.inspect.standard.model;

import com.shareworx.platform.persist.DomainModel;
import java.math.BigDecimal;

/**
 * 核查标准实体类
 * 
 * @author dms
 * @version since Shareworx platform 2.0
 */
@SuppressWarnings("serial")
public class InspectStandardModel extends DomainModel {
	
	/**
	 * 元数据名称
	 */
	public final static String META_ID = "yjwy_quality_inspectstandard";
	
	/** 主键ID */
	public final static String PK_INSPSTAN = "pk_inspstan";	
	/** 标准CODE */
	public final static String INSPSTAN_CODE = "inspstan_code";	
	/** 标准NAME */
	public final static String INSPSTAN_NAME = "inspstan_name";	
	/** 项目类别(项目类别的编码) */
	public final static String PROJECT_CATEGORY = "project_category";	
	/** 专业(字典专业编码) */
	public final static String SPECIALTY = "specialty";	
	/** 分值 */
	public final static String INSPSTAN_SCOREVALUE = "inspstan_scorevalue";	
	/** 标准类别 */
	public final static String INSPSTAN_CATEGORY = "inspstan_category";	
	/** 标准类别描述 */
	public final static String INSPSTAN_CATEGORY_DESCRIPTION = "inspstan_category_description";	
	/** 质量绩效指标 */
	public final static String INSPSTAN_PERFORMANCE_NORM = "inspstan_performance_norm";	
	/** 使用范围 */
	public final static String INSPSTAN_USINGSCOPE = "inspstan_usingscope";	
	/** 核查方法 */
	public final static String INSPSTAN_INPECTMETHOD = "inspstan_inpectmethod";	
	/** 是否强制拍照(1true,0false) */
	public final static String INSPSTAN_SECRETINQUIRIES = "inspstan_secretinquiries";	
	/** 对口主管频次(字典编码) */
	public final static String INSPSTAN_DKZG_PC = "inspstan_dkzg_pc";	
	/** 部门经理频次(字典编码) */
	public final static String INSPSTAN_BMJL_PC = "inspstan_bmjl_pc";	
	/** 项目经理频次(字典编码) */
	public final static String INSPSTAN_XMJL_PC = "inspstan_xmjl_pc";	
	/** 区域总助频次(字典编码) */
	public final static String INSPSTAN_QYZZ_PC = "inspstan_qyzz_pc";	
	/** 区域总频次(字典编码) */
	public final static String INSPSTAN_QYZ_PC = "inspstan_qyz_pc";	
	/** 总监频次(字典编码) */
	public final static String INSPSTAN_ZJ_PC = "inspstan_zj_pc";	
	/** 创建人 */
	public final static String CREATE_USER = "create_user";	
	/** 创建时间 */
	public final static String CREATE_TIME = "create_time";	
	/** 更新人 */
	public final static String UPDATE_USER = "update_user";	
	/** 更新时间 */
	public final static String UPDATE_TIME = "update_time";	
	/** 是否有效(1true,0false) */
	public final static String IS_VALID = "is_valid";	
	/** 所属公司 */
	public final static String PK_CROP = "pk_crop";	
	/** 外键(标准版本) */
	public final static String FK_STANDARDEDITION = "fk_standardedition";	

	public InspectStandardModel() {
		super(META_ID);
	}
	
	/**
	 * 获取元数据名称
	 */
	@Override
	public String getMetaName() {
		return META_ID;
	}
	
	/**
	 * 获取实体主键
	 */
	public String getPrimaryKey() {
		return PK_INSPSTAN;
	}
	
	/**
	 * 获取映射表字段
	 * @param key
	 * @return
	 */
	public String getColumn(String key) {
		switch (key) {
		case PK_INSPSTAN:
			return "pk_inspstan";
		case INSPSTAN_CODE:
			return "inspstan_code";
		case INSPSTAN_NAME:
			return "inspstan_name";
		case PROJECT_CATEGORY:
			return "project_category";
		case SPECIALTY:
			return "specialty";
		case INSPSTAN_SCOREVALUE:
			return "inspstan_scorevalue";
		case INSPSTAN_CATEGORY:
			return "inspstan_category";
		case INSPSTAN_CATEGORY_DESCRIPTION:
			return "inspstan_category_description";
		case INSPSTAN_PERFORMANCE_NORM:
			return "inspstan_performance_norm";
		case INSPSTAN_USINGSCOPE:
			return "inspstan_usingscope";
		case INSPSTAN_INPECTMETHOD:
			return "inspstan_inpectmethod";
		case INSPSTAN_SECRETINQUIRIES:
			return "inspstan_secretinquiries";
		case INSPSTAN_DKZG_PC:
			return "inspstan_dkzg_pc";
		case INSPSTAN_BMJL_PC:
			return "inspstan_bmjl_pc";
		case INSPSTAN_XMJL_PC:
			return "inspstan_xmjl_pc";
		case INSPSTAN_QYZZ_PC:
			return "inspstan_qyzz_pc";
		case INSPSTAN_QYZ_PC:
			return "inspstan_qyz_pc";
		case INSPSTAN_ZJ_PC:
			return "inspstan_zj_pc";
		case CREATE_USER:
			return "create_user";
		case CREATE_TIME:
			return "create_time";
		case UPDATE_USER:
			return "update_user";
		case UPDATE_TIME:
			return "update_time";
		case IS_VALID:
			return "is_valid";
		case PK_CROP:
			return "pk_crop";
		case FK_STANDARDEDITION:
			return "fk_standardedition";
		}
		return null;
	}

	/**
	 * 获取主键ID
	 * @return
	 */
	public String getPk_inspstan() {
		return getAttribute(PK_INSPSTAN);
	}

	/**
	 * 设置主键ID
	 * @param pk_inspstan
	 */
	public void setPk_inspstan(String pk_inspstan) {
		setAttribute(PK_INSPSTAN, pk_inspstan);
	}

	/**
	 * 获取标准CODE
	 * @return
	 */
	public String getInspstan_code() {
		return getAttribute(INSPSTAN_CODE);
	}

	/**
	 * 设置标准CODE
	 * @param inspstan_code
	 */
	public void setInspstan_code(String inspstan_code) {
		setAttribute(INSPSTAN_CODE, inspstan_code);
	}

	/**
	 * 获取标准NAME
	 * @return
	 */
	public String getInspstan_name() {
		return getAttribute(INSPSTAN_NAME);
	}

	/**
	 * 设置标准NAME
	 * @param inspstan_name
	 */
	public void setInspstan_name(String inspstan_name) {
		setAttribute(INSPSTAN_NAME, inspstan_name);
	}

	/**
	 * 获取项目类别(项目类别的编码)
	 * @return
	 */
	public String getProject_category() {
		return getAttribute(PROJECT_CATEGORY);
	}

	/**
	 * 设置项目类别(项目类别的编码)
	 * @param project_category
	 */
	public void setProject_category(String project_category) {
		setAttribute(PROJECT_CATEGORY, project_category);
	}

	/**
	 * 获取专业(字典专业编码)
	 * @return
	 */
	public String getSpecialty() {
		return getAttribute(SPECIALTY);
	}

	/**
	 * 设置专业(字典专业编码)
	 * @param specialty
	 */
	public void setSpecialty(String specialty) {
		setAttribute(SPECIALTY, specialty);
	}

	/**
	 * 获取分值
	 * @return
	 */
	public BigDecimal getInspstan_scorevalue() {
		return getAttribute(INSPSTAN_SCOREVALUE);
	}

	/**
	 * 设置分值
	 * @param inspstan_scorevalue
	 */
	public void setInspstan_scorevalue(BigDecimal inspstan_scorevalue) {
		setAttribute(INSPSTAN_SCOREVALUE, inspstan_scorevalue);
	}

	/**
	 * 获取标准类别
	 * @return
	 */
	public String getInspstan_category() {
		return getAttribute(INSPSTAN_CATEGORY);
	}

	/**
	 * 设置标准类别
	 * @param inspstan_category
	 */
	public void setInspstan_category(String inspstan_category) {
		setAttribute(INSPSTAN_CATEGORY, inspstan_category);
	}

	/**
	 * 获取标准类别描述
	 * @return
	 */
	public String getInspstan_category_description() {
		return getAttribute(INSPSTAN_CATEGORY_DESCRIPTION);
	}

	/**
	 * 设置标准类别描述
	 * @param inspstan_category_description
	 */
	public void setInspstan_category_description(String inspstan_category_description) {
		setAttribute(INSPSTAN_CATEGORY_DESCRIPTION, inspstan_category_description);
	}

	/**
	 * 获取质量绩效指标
	 * @return
	 */
	public String getInspstan_performance_norm() {
		return getAttribute(INSPSTAN_PERFORMANCE_NORM);
	}

	/**
	 * 设置质量绩效指标
	 * @param inspstan_performance_norm
	 */
	public void setInspstan_performance_norm(String inspstan_performance_norm) {
		setAttribute(INSPSTAN_PERFORMANCE_NORM, inspstan_performance_norm);
	}

	/**
	 * 获取使用范围
	 * @return
	 */
	public String getInspstan_usingscope() {
		return getAttribute(INSPSTAN_USINGSCOPE);
	}

	/**
	 * 设置使用范围
	 * @param inspstan_usingscope
	 */
	public void setInspstan_usingscope(String inspstan_usingscope) {
		setAttribute(INSPSTAN_USINGSCOPE, inspstan_usingscope);
	}

	/**
	 * 获取核查方法
	 * @return
	 */
	public String getInspstan_inpectmethod() {
		return getAttribute(INSPSTAN_INPECTMETHOD);
	}

	/**
	 * 设置核查方法
	 * @param inspstan_inpectmethod
	 */
	public void setInspstan_inpectmethod(String inspstan_inpectmethod) {
		setAttribute(INSPSTAN_INPECTMETHOD, inspstan_inpectmethod);
	}

	/**
	 * 获取是否强制拍照(1true,0false)
	 * @return
	 */
	public String getInspstan_secretinquiries() {
		return getAttribute(INSPSTAN_SECRETINQUIRIES);
	}

	/**
	 * 设置是否强制拍照(1true,0false)
	 * @param inspstan_secretinquiries
	 */
	public void setInspstan_secretinquiries(String inspstan_secretinquiries) {
		setAttribute(INSPSTAN_SECRETINQUIRIES, inspstan_secretinquiries);
	}

	/**
	 * 获取对口主管频次(字典编码)
	 * @return
	 */
	public String getInspstan_dkzg_pc() {
		return getAttribute(INSPSTAN_DKZG_PC);
	}

	/**
	 * 设置对口主管频次(字典编码)
	 * @param inspstan_dkzg_pc
	 */
	public void setInspstan_dkzg_pc(String inspstan_dkzg_pc) {
		setAttribute(INSPSTAN_DKZG_PC, inspstan_dkzg_pc);
	}

	/**
	 * 获取部门经理频次(字典编码)
	 * @return
	 */
	public String getInspstan_bmjl_pc() {
		return getAttribute(INSPSTAN_BMJL_PC);
	}

	/**
	 * 设置部门经理频次(字典编码)
	 * @param inspstan_bmjl_pc
	 */
	public void setInspstan_bmjl_pc(String inspstan_bmjl_pc) {
		setAttribute(INSPSTAN_BMJL_PC, inspstan_bmjl_pc);
	}

	/**
	 * 获取项目经理频次(字典编码)
	 * @return
	 */
	public String getInspstan_xmjl_pc() {
		return getAttribute(INSPSTAN_XMJL_PC);
	}

	/**
	 * 设置项目经理频次(字典编码)
	 * @param inspstan_xmjl_pc
	 */
	public void setInspstan_xmjl_pc(String inspstan_xmjl_pc) {
		setAttribute(INSPSTAN_XMJL_PC, inspstan_xmjl_pc);
	}

	/**
	 * 获取区域总助频次(字典编码)
	 * @return
	 */
	public String getInspstan_qyzz_pc() {
		return getAttribute(INSPSTAN_QYZZ_PC);
	}

	/**
	 * 设置区域总助频次(字典编码)
	 * @param inspstan_qyzz_pc
	 */
	public void setInspstan_qyzz_pc(String inspstan_qyzz_pc) {
		setAttribute(INSPSTAN_QYZZ_PC, inspstan_qyzz_pc);
	}

	/**
	 * 获取区域总频次(字典编码)
	 * @return
	 */
	public String getInspstan_qyz_pc() {
		return getAttribute(INSPSTAN_QYZ_PC);
	}

	/**
	 * 设置区域总频次(字典编码)
	 * @param inspstan_qyz_pc
	 */
	public void setInspstan_qyz_pc(String inspstan_qyz_pc) {
		setAttribute(INSPSTAN_QYZ_PC, inspstan_qyz_pc);
	}

	/**
	 * 获取总监频次(字典编码)
	 * @return
	 */
	public String getInspstan_zj_pc() {
		return getAttribute(INSPSTAN_ZJ_PC);
	}

	/**
	 * 设置总监频次(字典编码)
	 * @param inspstan_zj_pc
	 */
	public void setInspstan_zj_pc(String inspstan_zj_pc) {
		setAttribute(INSPSTAN_ZJ_PC, inspstan_zj_pc);
	}

	/**
	 * 获取创建人
	 * @return
	 */
	public String getCreate_user() {
		return getAttribute(CREATE_USER);
	}

	/**
	 * 设置创建人
	 * @param create_user
	 */
	public void setCreate_user(String create_user) {
		setAttribute(CREATE_USER, create_user);
	}

	/**
	 * 获取创建时间
	 * @return
	 */
	public String getCreate_time() {
		return getAttribute(CREATE_TIME);
	}

	/**
	 * 设置创建时间
	 * @param create_time
	 */
	public void setCreate_time(String create_time) {
		setAttribute(CREATE_TIME, create_time);
	}

	/**
	 * 获取更新人
	 * @return
	 */
	public String getUpdate_user() {
		return getAttribute(UPDATE_USER);
	}

	/**
	 * 设置更新人
	 * @param update_user
	 */
	public void setUpdate_user(String update_user) {
		setAttribute(UPDATE_USER, update_user);
	}

	/**
	 * 获取更新时间
	 * @return
	 */
	public String getUpdate_time() {
		return getAttribute(UPDATE_TIME);
	}

	/**
	 * 设置更新时间
	 * @param update_time
	 */
	public void setUpdate_time(String update_time) {
		setAttribute(UPDATE_TIME, update_time);
	}

	/**
	 * 获取是否有效(1true,0false)
	 * @return
	 */
	public String getIs_valid() {
		return getAttribute(IS_VALID);
	}

	/**
	 * 设置是否有效(1true,0false)
	 * @param is_valid
	 */
	public void setIs_valid(String is_valid) {
		setAttribute(IS_VALID, is_valid);
	}

	/**
	 * 获取所属公司
	 * @return
	 */
	public String getPk_crop() {
		return getAttribute(PK_CROP);
	}

	/**
	 * 设置所属公司
	 * @param pk_crop
	 */
	public void setPk_crop(String pk_crop) {
		setAttribute(PK_CROP, pk_crop);
	}

	/**
	 * 获取外键(标准版本)
	 * @return
	 */
	public String getFk_standardedition() {
		return getAttribute(FK_STANDARDEDITION);
	}

	/**
	 * 设置外键(标准版本)
	 * @param fk_standardedition
	 */
	public void setFk_standardedition(String fk_standardedition) {
		setAttribute(FK_STANDARDEDITION, fk_standardedition);
	}

}
